class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int res=0;
        

        for(int k=0;k<=31;k++){
            int temp=(1<<k);

            int  countOne=0;
            for(auto &it:nums){
                if((it&temp)!=0){
                    countOne++;
                }
            }
            if(countOne % 3==1){
                res=(res|temp);
            }
        }
    return res;


        //  sort(nums.begin(), nums.end());
        // int n = nums.size();

        // for (int i = 0; i < n - 1; i += 3) {
        //     if (nums[i] != nums[i + 1]) {
        //         return nums[i];
        //     }
        // }
        // return nums[n - 1];


        // int n=nums.size();
        // unordered_map<int,int> mp;
        // for(auto ele: nums){
        //     mp[ele]++;
        // }
        // for(auto it: mp){
        //     if(it.second==1){
        //         return  it.first;
        //     }
        // }
        // return -1;
    }
};